@module "arena"

@use "math" as math
@use "memory" as mem

const ARENA_MIN_BUFFER_SIZE: int = 64 * 1024; // !64k minimum
const ARENA_GROWTH_FACTOR: int = 2;
const ARENA_MAX_BUFFER_SIZE: int = 16 * 1024 * 1024; // !16MB maximum per buffer

const Buffer = struct {
    size: int,
    next: *void,
    ptr:  *char
};

pub const Allocator = struct {
    offset:           int,
    buffer:           *Buffer,
    head:             *Buffer,
    next_buffer_size: int,
    total_allocated:  int
};

const buffer_create = fn (s: int, alignment: int) *Buffer {
    if (alignment == 0) { alignment = 1024; }

    // alignment = math::max_size(alignment, );
    return cast<*Buffer>(alloc(sizeof<Buffer>));
}
