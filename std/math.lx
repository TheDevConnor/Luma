@module "math"

pub const PI: double = 3.14159265358979323;
const DEPTH: int = 3;
const DT: double = 0.005525661; // 0.000034339 - 0.0055 - 0.00007;

pub const add = fn (x: int, y: int) int {
    return x + y;
}

pub const subtract = fn (x: int, y: int) int {
    return x - y;
}

pub const multiply = fn (x: int, y: int) int {
    return x * y;
}

pub const divide = fn (x: int, y: int) int { 
    if (y == 0) {
        output("(Division by zero error) ");
        return 0;
    }
    return x / y;
}

pub const fib = fn (n: int, a: int, b: int) int {
    if (n == 0) { return a; }
    if (n == 1) { return b; }
    return fib(n - 1, b, a + b);
}

pub const power = fn (base: double, exponent: int) double {
    if (exponent == 0) { return 1.0; } 

    let result: double = 1.0;
    let e: int = exponent;

    if (e<0) {
        base = 1.0;
        e = -e;
    }

    loop (e > 0) : (--e) {
        result = result * base;
    }

    return result;
} 

pub const max_size = fn (a: int, b: int) int {
    if (a > b) { return a; }
    return b; 
}

pub const min_size = fn (a: int, b: int) int {
    if (a < b) { return a; }
    return b; 
}

pub const sin = fn (a: double) double {
    let pi2: double = PI / 2;
    let x: double = (a + pi2) % (PI * 2) - pi2;

    let x2: double = x * x;     // x²
    let x3: double = x * x2;    // x³
    let x5: double = x3 * x2;   // x⁵
    let x7: double = x5 * x2;   // x⁷
    let x9: double = x7 * x2;   // x⁹
    let x11: double = x9 * x2;  // x¹¹
    let x13: double = x11 * x2; // x¹³

    return x - (x3/6.0) + (x5/120.0) - (x7/5040.0)
             + (x9/362880.0) - (x11/39916800.0) + (x13/6227020800.0);
}

pub const cos = fn (a: double) double {
    return -(sin(a - (PI / 2.0))); 
}
