@module "main"

#returns_ownership
const from_char = fn (c: char) *char {
  let s: *char = cast<*char>(alloc(2 * sizeof<char>));
  s[0] = c;
  s[1] = cast<char>(0);
  return s;
} 

const consume_string = fn (s: *char) void {
  // This function takes ownership of s, so it must free it
  output("Consuming: ", s, "\n");
  free(s);
}

pub const main = fn () int {
    let c: *char = from_char('A');
    
    // Pass ownership to consume_string
    consume_string(c);
    
    // This should trigger a "use after free" error since ownership was transferred
    // output(c, "\n");  // Uncomment to test use-after-free detection
    
    return 0;
}
